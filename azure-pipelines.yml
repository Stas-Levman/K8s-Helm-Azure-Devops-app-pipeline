
resources:
  repositories: 
    - repository: NodsJS-web-app-with-Kubernetes-and-Helm
      type: github
      name: sincros121/NodsJS-web-app-with-Kubernetes-and-Helm
      ref: master
      endpoint: github.com_sincros121

trigger: none

pool: azure-vm

stages:
- stage: CI
  displayName: Build
  
  jobs:
  - job: Build
    displayName: Build image and Check Helm chart validity

    steps:
    - checkout: self
      displayName: Clone latest web-application repo
    
    - checkout: NodsJS-web-app-with-Kubernetes-and-Helm
      displayName: Clone Helm chart repo

    - task: DownloadSecureFile@1
      inputs:
        secureFile: 'stageValues'
    # - task: Docker@2
    #   displayName: Docker build
    #   inputs:
    #     containerRegistry: 'Private ACR'
    #     repository: 'bootcamp-app'
    #     command: 'build'
    #     Dockerfile: './Weight tracker - K8S and Helm/Dockerfile'
    #     tags: $(Build.BuildId)

    - script: |
        echo "$(stageValues.secureFilePath)"
  
    - script: |
        helm lint ./NodsJS-web-app-with-Kubernetes-and-Helm --set-file $(stageValues.secureFilePath)
      displayName: Check chart validity

  - job: Push
    displayName: Push image and Helm chart to registry
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    dependsOn: Build

    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'Private ACR'
        repository: 'bootcamp-app'
        command: 'push'
        tags: '$(Build.BuildId)'

    # - script: |





# - stage: Stage_deployment
#   displayName: Stage

#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#   dependsOn: CI
  
#   variables: 
#   - group: vault secrets - stage
#   - name: ip_address
#     value: $(az network public-ip list -g web-app-k8s-resources --query "[?tags.service].ipAddress | [0]" | tr -d '"')

  # jobs:
  # - deployment: deployToStage
  #   environment:
  #     name: stage
  #     resourceType: VirtualMachine
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
            
#           - task: Docker@2
#             displayName: Login to private registry
#             inputs:
#               containerRegistry: 'private-registry'
#               command: 'login'

#           - script: |
#               docker rm -f $(docker ps -aq) || true
#             displayName: Delete all previous containers
              
#           - script: |
#               docker pull wtregistry01.azurecr.io/bootcamp-app:$(Build.BuildId)
#             displayName: Pull latest application image
              
              # - script: |
              #     helm upgrade --install --namespace stage --create-namespace web-app-stage oci://staslregistry.azurecr.io/web-app-chart --version $(Build.BuildId) -f stage-values.yaml --atomic  --set ip_address=$(ip_address)


#           - script: |
#               docker create -p 8080:8080 --restart always --name wt wtregistry01.azurecr.io/bootcamp-app:$(Build.BuildId)
#             displayName: Create application container

#           - script: |
#               docker cp $(System.DefaultWorkingDirectory)/.env wt:/bootcamp-app/
#             displayName: Copy Env file to container appliaction directory

#           - task: Docker@2
#             displayName: Start appliaction container
#             inputs:
#               containerRegistry: 'private-registry'
#               command: 'start'
#               container: 'wt'

#           - task: DeleteFiles@1
#             displayName: Delete Env file for working directory
#             inputs:
#               SourceFolder: '$(System.DefaultWorkingDirectory)'
#               Contents: '.env'
          
          


  
# - stage: Prod_deployment
#   displayName: Prod
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#   dependsOn: Stage_deployment
  
#   variables: 
#   - group: vault secrets - prod
#   - name: ip_address
#     value: $(az network public-ip show -g weight-tracker-prod-rg -n front-public-ip --query ipAddress | tr -d '"')

#   jobs:
#   - deployment: deployToProd
#     environment:
#       name: prod
#       resourceType: VirtualMachine
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - template: templates/env-creation-prod.yaml

#           - task: Docker@2
#             displayName: Login to private registry
#             inputs:
#               containerRegistry: 'private-registry'
#               command: 'login'

#           - script: |
#               docker rm -f $(docker ps -aq) || true
#             displayName: Delete all previous containers
              
#           - script: |
#               docker pull wtregistry01.azurecr.io/bootcamp-app:$(Build.BuildId)
#             displayName: Pull latest application image

#           - script: |
#               docker create -p 8080:8080 --restart always --name wt wtregistry01.azurecr.io/bootcamp-app:$(Build.BuildId)
#             displayName: Create application container

#           - script: |
#               docker cp $(System.DefaultWorkingDirectory)/.env wt:/bootcamp-app/
#             displayName: Copy Env file to container appliaction directory

#           - task: Docker@2
#             displayName: Start appliaction container
#             inputs:
#               containerRegistry: 'private-registry'
#               command: 'start'
#               container: 'wt'

#           - task: DeleteFiles@1
#             displayName: Delete Env file for working directory
#             inputs:
#               SourceFolder: '$(System.DefaultWorkingDirectory)'
#               Contents: '.env'