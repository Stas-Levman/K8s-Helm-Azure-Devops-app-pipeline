

# trigger:
#   paths:
#     exclude:
#     - README.md

pool: azure-vm

stages:
- stage: CI
  displayName: Build
  
  jobs:
  - job: Build
    displayName: Build image

    steps:
    - checkout: self
      displayName: Clone latest web-application repo
    
    - task: Docker@2
      displayName: Docker build
      inputs:
        command: 'build'
        Dockerfile: 'dockerfile'
        tags: '$(Build.BuildId)'
        repository: 'bootcamp-app'
        containerRegistry: 'private-registry'

  - job: Push
    displayName: Push to registry
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    dependsOn: Build

    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'private-registry'
        repository: 'bootcamp-app'
        command: 'push'
        tags: '$(Build.BuildId)'



- stage: Stage_deployment
  displayName: Stage
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn: CI
  
  variables: 
  - group: vault secrets - stage
  - name: ip_address
    value: $(az network public-ip show -g weight-tracker-stage-rg -n front-public-ip --query ipAddress | tr -d '"')

  jobs:
  - deployment: deployToStage
    environment:
      name: stage
      resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          - template: templates/env-creation-stage.yaml

          - task: Docker@2
            displayName: Login to private registry
            inputs:
              containerRegistry: 'private-registry'
              command: 'login'

          - script: |
              docker rm -f $(docker ps -aq) || true
            displayName: Delete all previous containers
              
          - script: |
              docker pull wtregistry01.azurecr.io/bootcamp-app:$(Build.BuildId)
            displayName: Pull latest application image

          - script: |
              docker create -p 8080:8080 --restart always --name wt wtregistry01.azurecr.io/bootcamp-app:$(Build.BuildId)
            displayName: Create application container

          - script: |
              docker cp $(System.DefaultWorkingDirectory)/.env wt:/bootcamp-app/
            displayName: Copy Env file to container appliaction directory

          - task: Docker@2
            displayName: Start appliaction container
            inputs:
              containerRegistry: 'private-registry'
              command: 'start'
              container: 'wt'

          - task: DeleteFiles@1
            displayName: Delete Env file for working directory
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)'
              Contents: '.env'
          
          


  
- stage: Prod_deployment
  displayName: Prod
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn: Stage_deployment
  
  variables: 
  - group: vault secrets - prod
  - name: ip_address
    value: $(az network public-ip show -g weight-tracker-prod-rg -n front-public-ip --query ipAddress | tr -d '"')

  jobs:
  - deployment: deployToProd
    environment:
      name: prod
      resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          - template: templates/env-creation-prod.yaml

          - task: Docker@2
            displayName: Login to private registry
            inputs:
              containerRegistry: 'private-registry'
              command: 'login'

          - script: |
              docker rm -f $(docker ps -aq) || true
            displayName: Delete all previous containers
              
          - script: |
              docker pull wtregistry01.azurecr.io/bootcamp-app:$(Build.BuildId)
            displayName: Pull latest application image

          - script: |
              docker create -p 8080:8080 --restart always --name wt wtregistry01.azurecr.io/bootcamp-app:$(Build.BuildId)
            displayName: Create application container

          - script: |
              docker cp $(System.DefaultWorkingDirectory)/.env wt:/bootcamp-app/
            displayName: Copy Env file to container appliaction directory

          - task: Docker@2
            displayName: Start appliaction container
            inputs:
              containerRegistry: 'private-registry'
              command: 'start'
              container: 'wt'

          - task: DeleteFiles@1
            displayName: Delete Env file for working directory
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)'
              Contents: '.env'